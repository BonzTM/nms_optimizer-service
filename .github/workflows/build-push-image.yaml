name: Build Image and Push
on:
  workflow_dispatch:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN
permissions:
  packages: write
  contents: read

env:
  GHCR_REPO: ghcr.io/${{ github.repository_owner }}/nms-optimizer-service
  DOCKERHUB_REPO: bonztm/nms-optimizer-service

jobs:
  build-push-image:
    runs-on: 
      - nms-optimizer-service

    steps:
      - name: checkout repo content
        uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: 3

      - name: Run Unit Tests
        run: python -m unittest discover -v -s ./tests -p "test_*.py"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create docker context
        run: |
          docker context create nms-optimizer-service

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          endpoint: nms-optimizer-service

      - name: Generate docker image tags
        id: metadata
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=true
          images: |
            ${{ env.GHCR_REPO }}
            ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}

      - name: Remove docker context
        if: always()
        run: docker context rm nms-optimizer-service

      - name: Update Dockerhub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKERHUB_REPO }}
          readme-filepath: README.md
          short-description: ${{ github.event.repository.description }}
